name: Build PyGObject Wheel

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on Windows
    runs-on: windows-latest

    env:
      PYGOBJECT_VERSION: 3.51.0
      GTK_VERSION: 3.24
      VCPKG_DEFAULT_TRIPLET: 'x86-windows'
      PYTHON_PATH: '${{ github.workspace }}\gtk3.24\vcpkg_installed\x86-windows\tools\python3'
      PYTHON_EXE: '${{ github.workspace }}\gtk3.24\vcpkg_installed\x86-windows\tools\python3\python.exe'
      PYSCRIPT_DIR: '${{ github.workspace }}\gtk3.24\vcpkg_installed\x86-windows\tools\python3\scripts'


    steps:
      - uses: actions/checkout@v3

      - name: Set up MSVC++ 2015
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Download GTK artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yaml
          name: gtk${{ env.GTK_VERSION }}-windows
          repo: az0/bbgtkwin
          path: gtk${{ env.GTK_VERSION }}

      - name: Extract GTK files
        shell: cmd
        run: |
          cd gtk${{ env.GTK_VERSION }}
          certutil -hashfile gtk${{ env.GTK_VERSION }}-x86-windows.zip SHA256
          7z x gtk${{ env.GTK_VERSION }}-x86-windows.zip

      - name: Download PyGObject source
        shell: bash
        run: |
          curl -L https://download.gnome.org/sources/pygobject/3.51/pygobject-${{ env.PYGOBJECT_VERSION }}.tar.xz -o pygobject.tar.xz
          certutil -hashfile pygobject.tar.xz SHA256
          tar xf pygobject.tar.xz

      - name: Install build dependencies
        shell: cmd
        env:
          PATH: ${{ env.PATH }};${{ env.PYSCRIPT_DIR }}
        run: |
          %PYTHON_EXE% -m ensurepip --upgrade
          set PATH=%PATH%;%PYSCRIPT_DIR%
          %PYTHON_EXE% -m pip install wheel setuptools build pycairo meson ninja
          choco install pkgconfiglite --x86

      - name: Build wheel
        env:
          PKG_CONFIG_PATH: ${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\lib\pkgconfig
          CL: '-I${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\include\python3.11'
        run: |
          echo ${{ env.PATH }}
          dir "${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\include\python3.11"
          cd pygobject-%PYGOBJECT_VERSION%
          echo copying python311.lib as a workaround
          mkdir "${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\tools\python3\libs"
          copy "${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\lib\python311.lib" "${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\tools\python3\libs"
          dir "${{ github.workspace }}\gtk${{ env.GTK_VERSION }}\vcpkg_installed\x86-windows\tools\python3\libs"
          "%PYSCRIPT_DIR%\meson" setup builddir --prefix="%CD%\dist" --backend=ninja -Dbuildtype=release
          "%PYSCRIPT_DIR%\ninja" -C builddir
          "%PYSCRIPT_DIR%\ninja" -C builddir install
          cd dist
          "%PYTHON_EXE%" -m build --wheel
          dir /b /s *.whl
        shell: cmd

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: pygobject-wheel
          path: ./pygobject-$PYGOBJECT_VERSION/dist/*.whl

      # Release when a tag is pushed
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ./pygobject-${{ env.PYGOBJECT_VERSION }}/dist/*.whl
          generate_release_notes: false
          fail_on_unmatched_files: true
